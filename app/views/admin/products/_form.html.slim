= form_with(model: [:admin, @product], local: true) do |form|
  - if @product.errors.any?
    #error_explanation
      h2 = "#{pluralize(@product.errors.count, 'error')} prohibited this product from being saved:"
      ul
        - @product.errors.full_messages.each do |message|
          li= message

  .field
    = form.label :existing_series, "Select Existing Series (or choose to create a new one)"
    = form.select :existing_series, options_for_select([["Create New Series", ""]] + (@existing_products.present? ? @existing_products.map { |p| [p.name, p.id] } : [])), include_blank: true, onchange: "toggleSeriesFields(this.value)"

  - if @product.new_record? || form.object.id.blank?
    .new-series-fields
      .field
        = form.label :name, "Series Name"
        = form.text_field :name
      .field
        = form.label :description, "Series Description"
        = form.text_area :description
      .field
        = form.label :active
        = form.check_box :active

  h3 Product Variants
  #variants
  = form.fields_for :product_variants do |variant_form|
    .nested-fields
      .field
        = variant_form.label :name, "Variant Name"
        = variant_form.text_field :name

      .field
        = variant_form.label :description, "Variant Description"
        = variant_form.text_area :description

      .field
        = variant_form.label :price, "Variant Price"
        = variant_form.text_field :price

      .field
        = variant_form.label :stock, "Variant Stock"
        = variant_form.text_field :stock

      .field
        = variant_form.label :active
        = variant_form.check_box :active

      = link_to 'Remove Variant', '#', class: 'remove_variant btn btn-danger'

  .actions
    = link_to 'Add Another Variant', '#', id: 'add_variant', class: 'btn btn-primary'
    = form.submit 'Create Product Series'
